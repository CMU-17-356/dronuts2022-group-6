//Customer
{
    "username": String, //Unique
    "password": String, //Salted, Hashed Password
    "fname": String,
    "lname": String,
    "email": String,
    "address":  Integer
}

//ex
{
    "username": "takholee",
    "password": "735ed12abec12bdcb42b",
    "fname": "Tak-Ho",
    "lname": "Lee",
    "email": "takhol@andrew.cmu.edu",
    "address_id":  1
}

//Address
{
    "address_id": Integer, //Unique
    "street_address_1": String,
    "street_address_2": String,
    "city": String,
    "state": String,
    "zipcode": String,
    "username":  String //Foreign key to object. 
}
//ex
{
    "address_id": 1, //Unique
    "street_address_1": "1914 Murray Avenue",
    "street_address_2": "Apt 27",
    "city": "Pittsburgh",
    "state": "PA",
    "zipcode": "15217",
    "username":  "takholee" //Foreign key to object. 
}


//Employee
{
    "username": String, //Unique
    "password": String, //Salted, Hashed Password
    "fname": String,
    "lname": String,
    "email": String,
    "primary_task": ["DOUGH", "FROSTING", "DELIVERY", "CASHIER", "CLEANING"], //enum. primary task of the employee
    "secondary_task": ["DOUGH", "FROSTING", "DELIVERY", "CASHIER", "CLEANING"] //enum. secondary task of the employee
}
//ex
{
    "username": "ilovedonuts",
    "password": "431ed12abec12dsfb42b", 
    "fname": "Do",
    "lname": "Nut",
    "email": "donut@andrew.cmu.edu",
    "primary_task": "DOUGH", //enum. primary task of the employee
    "secondary_task": "FROSTING" //enum. secondary task of the employee
}

//Donuts
{
    "name": String, //Unique. Donut Name
    "description": String, //Description of Donut
    "price": Float, //Price of individual donut
    "quantity_left": Integer, //number of donuts left in inventory
    "weight": Float //weight of individual donut. in ounces
}
//ex
{
    "name": "Glazed Donut",
    "description": "The original glazed donut everyone loves.", 
    "price": "2.50", 
    "quantity_left": 10, 
    "weight": 1.3 
}

//Drones
{
    "drone_id": Integer, //Unique. Drone ID
    "weight_limit": Float, //How much weight a drone can hold in ounces
    "battery_status": Integer, //How much battery is left in drone in percentage
    "status": ["ON_WAY_TO_DELIVERY", "ON_WAY_BACK_FROM_DELIVERY", "IDLE", "CHARGING", "MAINTENACE"] //enum. current status of a drone
}
//ex
{
    "drone_id": 1,
    "weight_limit": 13,
    "battery_status": 43,
    "status": "ON_WAY_TO_DELIVERY"
}

// Orders
{
    "order_id": Integer, //Unique PK, Order ID
    "customer_id": Integer, //FK, Customer ID
    "drone_id": Integer, //FK, drone ID
    "orderItems_id": Integer, //FK, orderItems ID
    "address": String, // Delivery address text
    "payment_method": ["VISA, VENMO, PAYPAL, CREDIT"], //payment type categorized by enum type
    "status": ["INCOMPLETE, INPROGRESS, INDELIVERY, DELIVERED"], // Status type categorized by enum type
    "time_of_purchase": Date, // time of purchasing the donuts. marked by payment time
    "time_of_departure": Date, // ftime of the drones leaves the store
    "time_of_arrival": Date, // time of the drones arrive at the destination 
    "estimated_time": Date, // Estimiated delivery time calcualted based on distance and weather(wind)
    "grand_total": Float // grand total of the order, including tax and service fees
}

// Ex
{   
    "order_id": 1, 
    "customer_id": 12,
    "drone_id": 9,
    "orderItems_id": 1,
    "address": "5000 Forbes Ave, 15213",
    "payment_method": "VISA", 
    "status": "INCOMPLETE", 
    "time_of_purchase": Date('December 17, 2021 03:24:00'), 
    "time_of_departure": Date('December 17, 2021 04:24:00'), 
    "time_of_arrival": Date('December 17, 2021 04:54:00'), 
    "estimated_time": Date('00:30:00'), 
    "grand_total": 21.05
}

// OrderItems

{
    "orderItem_id": Integer, //PK, unique orderItem ID
    "order_id": Integer, //FK, Order ID
    "donut_id": Integer, //FK, drone ID
    "quantity": Integer, //quanity of the donut specificed by its id
    "subtotal": Float, // subtotal of the order, calculated by quantity * donut price, not including tax
}

// Ex

{
    "orderItem_id": 1, 
    "order_id": 2, 
    "donut_id": 3, 
    "quantity": 2, 
    "subtotal": 5.8,
}